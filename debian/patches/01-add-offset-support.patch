diff --git a/fuse-ext2/do_probe.c b/fuse-ext2/do_probe.c
index 364e945..789adee 100644
--- a/fuse-ext2/do_probe.c
+++ b/fuse-ext2/do_probe.c
@@ -29,7 +29,8 @@ int do_probe (struct extfs_data *opts)
 
 	debugf_main("enter");
 
-	rc = ext2fs_open(opts->device, EXT2_FLAG_RW, 0, 0, unix_io_manager, &e2fs);
+	rc = ext2fs_open2(opts->device, opts->ext2_options, EXT2_FLAG_RW, 
+			  0, 0, unix_io_manager, &e2fs);
 	if (rc) {
 		debugf_main("Error while trying to open %s (rc=%d)", opts->device, rc);
 		return -1;
diff --git a/fuse-ext2/fuse-ext2.c b/fuse-ext2/fuse-ext2.c
index 7f0d1d3..bb0bcaf 100644
--- a/fuse-ext2/fuse-ext2.c
+++ b/fuse-ext2/fuse-ext2.c
@@ -234,6 +234,18 @@ static char * parse_mount_options (const char *orig_opts, struct extfs_data *opt
 #if __FreeBSD__ == 10
 			strcat(ret, "force,");
 #endif
+		} else if (!strcmp(opt, "offset")) { /* Byte offset in device */
+			if (!val) {
+				debugf_main("'offset' option must have value");
+				goto err_exit;
+			}
+			if (opts->ext2_options)
+				if (strappend(&opts->ext2_options, "&"))
+					goto err_exit;
+			if (strappend(&opts->ext2_options, "offset="))
+				goto err_exit;
+			if (strappend(&opts->ext2_options, val))
+				goto err_exit;
 		} else { /* Probably FUSE option. */
 			strcat(ret, opt);
 			if (val) {
@@ -343,18 +355,18 @@ int main (int argc, char *argv[])
 		goto err_out;
 	}
 
-	if (do_probe(&opts) != 0) {
-		debugf_main("Probe failed");
-		err = -4;
-		goto err_out;
-	}
-
 	parsed_options = parse_mount_options(opts.options ? opts.options : "", &opts);
 	if (!parsed_options) {
 		err = -2;
 		goto err_out;
 	}
 
+	if (do_probe(&opts) != 0) {
+		debugf_main("Probe failed");
+		err = -4;
+		goto err_out;
+	}
+
 	debugf_main("opts.device: %s", opts.device);
 	debugf_main("opts.mnt_point: %s", opts.mnt_point);
 	debugf_main("opts.volname: %s", (opts.volname != NULL) ? opts.volname : "");
@@ -386,5 +398,6 @@ err_out:
 	free(opts.options);
 	free(opts.device);
 	free(opts.volname);
+	free(opts.ext2_options);
 	return err;
 }
diff --git a/fuse-ext2/fuse-ext2.h b/fuse-ext2/fuse-ext2.h
index e38582b..bae4062 100644
--- a/fuse-ext2/fuse-ext2.h
+++ b/fuse-ext2/fuse-ext2.h
@@ -82,6 +82,7 @@ struct extfs_data {
 	char *options;
 	char *device;
 	char *volname;
+	char *ext2_options;
 	ext2_filsys e2fs;
 };
 
diff --git a/fuse-ext2/fuse-ext2.probe.c b/fuse-ext2/fuse-ext2.probe.c
index 42473ea..d423a39 100644
--- a/fuse-ext2/fuse-ext2.probe.c
+++ b/fuse-ext2/fuse-ext2.probe.c
@@ -44,12 +44,13 @@ static int parse_options (int argc, char *argv[], struct extfs_data *opts)
 {
 	int c;
 
-	static const char *sopt = "-rwd";
+	static const char *sopt = "-rwdo";
 	static const struct option lopt[] = {
-		{ "readonly",	 no_argument,	NULL, 'r' },
-		{ "readwrite",	 no_argument,	NULL, 'w' },
-		{ "debug",       no_argument,   NULL, 'd' },
-		{ NULL,		 0,		NULL,  0  }
+		{ "readonly",	 no_argument,	        NULL, 'r' },
+		{ "readwrite",	 no_argument,	        NULL, 'w' },
+		{ "debug",       no_argument,           NULL, 'd' },
+		{ "offset",      required_argument,     NULL, 'o' },
+		{ NULL,		 0,		        NULL,  0  }
 	};
 
 	opterr = 0; /* We'll handle the errors, thank you. */
@@ -86,6 +87,18 @@ static int parse_options (int argc, char *argv[], struct extfs_data *opts)
 			case 'd':
 				opts->debug = 1;
 				break;
+			case 'o':
+				if (!opts->ext2_options) {
+					opts->ext2_options = malloc(strlen("offset=") + strlen(optarg) + 1);
+					if (!opts->ext2_options)
+						return -1;
+					memcpy(opts->ext2_options, "offset=", strlen("offset="));
+					strcat(opts->ext2_options, optarg);
+				} else {
+					debugf_main("Offset must be specified only once");
+					return -1;
+				}
+				break;
 			default:
 				debugf_main("Unknown option '%s'", argv[optind - 1]);
 				return -1;
@@ -131,5 +144,6 @@ err_out:
 	free(opts.device);
 	free(opts.volname);
 	free(opts.options);
+	free(opts.ext2_options);
 	return err;
 }
diff --git a/fuse-ext2/op_init.c b/fuse-ext2/op_init.c
index 22ffa48..4a5768a 100644
--- a/fuse-ext2/op_init.c
+++ b/fuse-ext2/op_init.c
@@ -28,7 +28,7 @@ void * op_init (struct fuse_conn_info *conn)
 
 	debugf("enter %s", e2data->device);
 
-	rc = ext2fs_open(e2data->device, 
+	rc = ext2fs_open2(e2data->device, e2data->ext2_options,
 			(e2data->readonly) ? 0 : EXT2_FLAG_RW,
 			0, 0, unix_io_manager, &e2data->e2fs);
 	if (rc) {
